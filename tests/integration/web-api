#!/bin/sh -

builtin . /etc/shrc;

_main() {
  local SYSTEM_DIR=$( sysdir );

  local MNT_DIR="${SYSTEM_DIR}/mnt";
  if ! is-mounted "$MNT_DIR"; then
    errmsg "$(bright-white ${MNT_DIR}) must be mounted before testing any filesystem(s)."; return 1;
  fi

  local RC=0;
  #local HOST='192.168.1.253';
 # local HOST=$( IFCONFIG_FORMAT=inet:cidr /sbin/ifconfig int0 | \
                #/usr/bin/head -n6 | \
                #/usr/bin/tail -n1 | \
                #/usr/bin/xargs | \
                #/usr/bin/cut -d' ' -f2 | \
                #/usr/bin/sed -E 's|\/[[:digit:]]{1,2}$||' );

  local HOST_ALIAS='192.168.1.100';
  local HOST_ALIAS_CIDR="${HOST_ALIAS}/24";
  local JAIL_ADDR='192.168.1.254';
  local JAIL_ADDR_CIDR="${JAIL_ADDR}/24";
  local PORT_NGINX='80';
  local PORT_NODE='3000';
  local ADDR_NGINX="127.0.0.1:${PORT_NGINX}";
  local ADDR_NODE="127.0.0.1:${PORT_NODE}";

  if ! is-nic-addr ext0 ${HOST_ALIAS_CIDR}; then
    /sbin/ifconfig ext0 alias ${HOST_ALIAS_CIDR} || return 1
  fi
  if ! is-nic ext0bridge; then
    # Create a new bridge so we can communicate with the jail interface.
    # created by scripts/created
    /sbin/ifconfig bridge create name ext0bridge >>/dev/null || return 1
  fi
  if ! is-bridge-member ext0bridge ext0; then
    /sbin/ifconfig ext0bridge addm ext0 up || return 1
  fi
  # re0 is the int0 interface (before renamed to int0)
  # created by scripts/created
  if ! is-bridge-member ext0bridge homewall_re0; then
    /sbin/ifconfig br0 addm homewall_re0 up || return 1
  fi

  ## ASSERTIONS-BEGIN ##

  assert "int0 inet ${JAIL_ADDR_CIDR}" jexec_ homewall is-nic-addr int0 ${JAIL_ADDR_CIDR} || exit 1 

  # if node isn't running, but nginx is (as a reverse proxy), it returns 502: Bad Gateway.
  # Otherwise, it should return: 200: Success.
  #
  # Exit early if either of these fail as they are required for the others to pass.
  #
  assert "nginx is listening on ${ADDR_NGINX}" jexec_ homewall is-process-listening nginx ${ADDR_NGINX} || exit 1 
  assert "node is listening on ${ADDR_NODE}" jexec_ homewall is-process-listening node ${ADDR_NODE} || exit 1

  # Confirm that the web API is (in)accessible from the expected address.
  #
  # *NOTE* these commands need to run from outside the jail.
  #
  assert "the web api is accessible from http://${JAIL_ADDR}:${PORT_NGINX}" is-http-status-code ${JAIL_ADDR}:${PORT_NGINX} 200 || RC=1
  assert "the web api is NOT accessible from http://${JAIL_ADDR}:${PORT_NODE}" is-http-status-code ${JAIL_ADDR}:${PORT_NODE} 0 || RC=1

  ## ASSERTIONS-END ##

  # Remove the temporary alias so we can communicate with int0 subnet in homewall.
  if is-nic-addr ext0 ${HOST_ALIAS_CIDR}; then
    /sbin/ifconfig ext0 ${HOST_ALIAS_CIDR} delete;
  fi
  if is-bridge-memberless ext0bridge; then
    /sbin/ifconfig ext0bridge destroy || return 1
  fi

  exit "$RC";
}
_main;

