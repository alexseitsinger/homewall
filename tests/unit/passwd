#!/bin/sh -
#
# *TODO* assert real password or 'test' password is set in passwd.

builtin . /etc/shrc

_main() {
  local SYSTEM_NAME=$(sysname)
  local SYSTEM_DIR=$(sysdir "$SYSTEM_NAME")

  local MNT_DIR="${SYSTEM_DIR}/mnt"
  if ! is-mounted "$MNT_DIR"; then
    errmsg "$(bright-white ${MNT_DIR}) must be mounted before testing any filesystem(s)."
    return 1
  fi

  local RC=0

  local ETC_DIR="${SYSTEM_DIR}/files/etc"
  local MASTER_PASSWD="${ETC_DIR}/master.passwd"
  local PASSWD="${ETC_DIR}/passwd"
  local PWD_DB="${ETC_DIR}/pwd.db"
  local SPWD_DB="${ETC_DIR}/spwd.db"
  local GROUP="${ETC_DIR}/group"

  local MASTER_PASSWD_DST="${MNT_DIR}/etc/master.passwd"
  local PASSWD_DST="${MNT_DIR}/etc/passwd"
  local PWD_DB_DST="${MNT_DIR}/etc/pwd.db"
  local SPWD_DB_DST="${MNT_DIR}/etc/spwd.db"
  local GROUP_DST="${MNT_DIR}/etc/group"

  ## ASSERTIONS-BEGIN ##

  assert "${GROUP} is a file" test -f "$GROUP" || RC=1
  assert "${GROUP} is owned by root:wheel" is-owner "$GROUP" root:wheel || RC=1
  assert "${GROUP} has the mode u=rw,g=r" is-mode "$GROUP" u=rw,go=r || RC=1
  assert "${GROUP} has the flag schg" is-flag "$GROUP" schg || RC=1

  assert "${PASSWD} is a file" test -f "$PASSWD" || RC=1
  assert "${PASSWD} is owned by root:wheel" is-owner "$PASSWD" root:wheel || RC=1
  assert "${PASSWD} has the mode u=rw,g=r" is-mode "$PASSWD" u=rw,go=r || RC=1
  assert "${PASSWD} has the flag schg" is-flag "$PASSWD" schg || RC=1

  assert "${PWD_DB} is a file" test -f "$PWD_DB" || RC=1
  assert "${PWD_DB} has the owner root:wheel" is-owner "$PWD_DB" root:wheel || RC=1
  assert "${PWD_DB} has the mode u=rw,go=r" is-mode "$PWD_DB" u=rw,go=r || RC=1
  assert "${PWD_DB} has the flag schg" is-flag "$PWD_DB" schg || RC=1

  assert "${MASTER_PASSWD} is a file" test -f "$MASTER_PASSWD" || RC=1
  assert "${MASTER_PASSWD} is owned by root:wheel" is-owner "$MASTER_PASSWD" root:wheel || RC=1
  assert "${MASTER_PASSWD} has the mode u=rw,go=" is-mode "$MASTER_PASSWD" u=rw,go= || RC=1
  assert "${MASTER_PASSWD} has the flag schg" is-flag "$MASTER_PASSWD" schg || RC=1

  assert "${SPWD_DB} is a file" test -f "$SPWD_DB" || RC=1
  assert "${SPWD_DB} has the owner root:wheel" is-owner "$SPWD_DB" root:wheel || RC=1
  assert "${SPWD_DB} has the mode u=rw,go=" is-mode "$SPWD_DB" u=rw,go= || RC=1
  assert "${SPWD_DB} has the flag schg" is-flag "$SPWD_DB" schg || RC=1

  # Symlinks

  assert "${GROUP_DST} is a symlink" test -L "$GROUP_DST" || RC=1
  assert "${GROUP_DST} is owned by: root:wheel" is-owner "$GROUP_DST" root:wheel || RC=1
  #assert "${GROUP_DST} has the mode: u=rwx,go=rx" is-mode "$GROUP_DST" u=rwx,go=rx || RC=1
  assert "${GROUP_DST} has the flag: schg" is-flag "$GROUP_DST" schg || RC=1

  assert "${PASSWD_DST} is a symlink" test -L "$PASSWD_DST" || RC=1
  assert "${PASSWD_DST} is owned by: root:wheel" is-owner "$PASSWD_DST" root:wheel || RC=1
  #assert "${PASSWD_DST} has the mode: u=rwx,go=rx" is-mode "$PASSWD_DST" u=rwx,go=rx || RC=1
  assert "${PASSWD_DST} has the flag: schg" is-flag "$PASSWD_DST" schg || RC=1

  assert "${GROUP_DST} is a symlink" test -L "$GROUP_DST" || RC=1
  assert "${GROUP_DST} is owned by: root:wheel" is-owner "$GROUP_DST" root:wheel || RC=1
  #assert "${PASSWD_DST} has the mode: u=rwx,go=rx" is-mode "$GROUP_DST" u=rwx,go=rx || RC=1
  assert "${PASSWD_DST} has the flag: schg" is-flag "$GROUP_DST" schg || RC=1

  assert "${PWD_DB_DST} is a symlink" test -L "$PWD_DB_DST" || RC=1
  assert "${PWD_DB_DST} is owned by: root:wheel" is-owner "$PWD_DB_DST" root:wheel || RC=1
  #assert "${PWD_DB_DST} has the mode: u=rwx,go=rx" is-mode "$PWD_DB_DST" u=rwx,go=rx || RC=1
  assert "${PWD_DB_DST} has the flag: schg" is-flag "$PWD_DB_DST" schg || RC=1

  assert "${MASTER_PASSWD_DST} is a symlink" test -L "$MASTER_PASSWD_DST" || RC=1
  assert "${MASTER_PASSWD_DST} is owned by: root:wheel" is-owner "$MASTER_PASSWD_DST" root:wheel || RC=1
  #assert "${MASTER_PASSWD_DST} has the mode: u=rwx,go=rx" is-mode "$MASTER_PASSWD_DST" u=rwx,go=rx || RC=1
  assert "${MASTER_PASSWD_DST} has the flag: schg" is-flag "$MASTER_PASSWD_DST" schg || RC=1

  assert "${SPWD_DB_DST} is a symlink" test -L "$SPWD_DB_DST" || RC=1
  assert "${SPWD_DB_DST} is owned by: root:wheel" is-owner "$SPWD_DB_DST" root:wheel || RC=1
  #assert "${SPWD_DB_DST} has the mode: u=rwx,go=rx" is-mode "$SPWD_DB_DST" u=rwx,go=rx || RC=1
  assert "${SPWD_DB_DST} has the flag: schg" is-flag "$SPWD_DB_DST" schg || RC=1

  # Confirm that the real passwords have been set.
  #
  #local DATA_DIR="${SYSTEM_DIR}/data"
  #local P_TEST=$(/bin/cat "${DATA_DIR}/test.SHA512")
  #local P=''
  #local UNS='root:ams'
  #local UN=''
  #local P=''
  #local L=''
  #local IFS=':'; for UN in ${UNS}; do
    #P=$(/bin/cat "${DATA_DIR}/pw.${UN}.SHA512")
    #L=$(/bin/cat "$MASTER_PASSWD" | /usr/bin/grep -sE "^${UN}\:" | /usr/bin/cut -d':' -f2)
    #if [ "$P" == "$L" ]; then
    #  /usr/bin/printf '[PASS]: %s contains the real password for %s.\n' "$MASTER_PASSWD" "$UN"
    #elif [ "$P" == "$P_TEST" ]; then
    #  /usr/bin/printf '[PASS]: %s contains the test password for %s.\n' "$MASTER_PASSWD" "$UN"
    #else
    #  /usr/bin/printf '[FAIL]: %s does not contain the real or test password for %s.\n' "$MASTER_PASSWD" "$UN"
    #  RC=1
    #fi
  #done

  ## ASSERTIONS-END ##

  exit "$RC"
}
_main
