#!/bin/sh -
#
# Still fuck comments
# And fuck vim's undo
#

builtin . /etc/shrc

_detach_usr_local() {
  local IMG="/work/systems/targets/homewall/images/usr_local"
  if is-attached "$IMG"; then
    detach "$IMG"
  fi
}

_detach_var() {
  local IMG="/work/systems/targets/homewall/images/var"
  if is-attached "$IMG"; then
    detach "$IMG"
  fi
}

_detach_home() {
  local IMG="/work/systems/targets/homewall/images/home"
  if is-attached "$IMG"; then
    detach "$IMG"
  fi
}

_detach_jails_thin() {
  local IMG="/work/systems/targets/homewall/images/jails_thin"
  if is-attached "$IMG"; then
    detach "$IMG"
  fi
}

_detach_files() {
  local IMG='/work/systems/targets/homewall/images/files';
  if is-attached "$IMG"; then
    detach "$IMG";
  fi
}

_destroy_nics() {
  if is-nic homewall_ale0; then
    /sbin/ifconfig homewall_ale0 destroy
  fi
  if is-nic homewall_re0; then
    /sbin/ifconfig homewall_re0 destroy
  fi

  if is-nic homewall_ext0; then
    /sbin/ifconfig homewall_ext0 destroy;
  fi
  if is-nic homewall_int0; then
    /sbin/ifconfig homewall_int0 destroy;
  fi
}

_main() {
  local IS_JAIL=$( /sbin/sysctl -qien security.jail.jailed );

  # Mounting chardevs within any jail always returns Operating not permitted so
  # we have to do this shit from the host, first.
  if [ "$IS_JAIL" -ne 1 ]; then
    _detach_files;
    _detach_usr_local;
    _detach_home;
    _detach_var;
    _detach_jails_thin;
  fi

  # We only want to setup the jail's filesystem when we're on the host.
  # Once we're in the bastille jail we can create and destroy these nics.
  if [ "$IS_JAIL" -eq 1 ]; then
    _destroy_nics || return 1
  fi
}
_main
